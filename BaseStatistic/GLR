//算法名称-广义似然比(GLR)
import cn.neucloud.dasuan.analysis.stat.ComputeGLR
import org.apache.spark.sql.types.{DoubleType, StructField, StructType}
import org.apache.spark.sql.{Row, SQLContext}

val sqlContext = new org.apache.spark.sql.SQLContext(sc)

//数据准备
val data = sc.parallelize(
  Seq(
    Row(11.117686),Row(20.728264),Row(33.794003),
    Row(41.555668),Row(55.257105),Row(60.134758),
    Row(72.844179),Row(83.089599),Row(90.202951),
    Row(101.268993),Row(113.795615),Row(126.053744),
    Row(130.450658),Row(141.262964),Row(150.426961),
    Row(162.379259),Row(173.225800),Row(180.300970)
  )
)
val schemaString = "x"
val schema =
  StructType(
    schemaString.split(" ").map(fieldName => StructField(fieldName, DoubleType, true)))
var df = sqlContext.createDataFrame(data, schema)
//应用算法
val computeGLR = new ComputeGLR
computeGLR.setDistribute("exponential")
computeGLR.setCheckValue(100.0)
computeGLR.setSignificance(0.1)
val htResult = computeGLR.transform(df)
htResult.show(false)
